# Generated by Django 5.2 on 2025-04-05 18:44
# migrations: 0001_initial.py
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Curso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('descripcion', models.TextField(blank=True)),
                ('docente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cursos', to=settings.AUTH_USER_MODEL)),
                ('estudiantes', models.ManyToManyField(blank=True, related_name='cursos_inscritos', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Curso',
                'verbose_name_plural': 'Cursos',
            },
        ),
        migrations.CreateModel(
            name='Ejercicio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('descripcion', models.TextField()),
                ('tipo', models.CharField(choices=[('opcion_multiple', 'Opción Múltiple'), ('verdadero_falso', 'Verdadero o Falso'), ('respuesta_corta', 'Respuesta Corta'), ('desarrollo', 'Desarrollo')], max_length=20)),
                ('contenido', models.JSONField(help_text='Contenido del ejercicio en formato JSON')),
                ('puntaje', models.PositiveIntegerField(default=1)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('creador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ejercicios', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Ejercicio',
                'verbose_name_plural': 'Ejercicios',
            },
        ),
        migrations.CreateModel(
            name='EstudianteEvaluacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('activo', 'Activo'), ('finalizado', 'Finalizado'), ('expulsado', 'Expulsado')], default='pendiente', max_length=10)),
                ('fecha_inicio', models.DateTimeField(blank=True, null=True)),
                ('fecha_fin', models.DateTimeField(blank=True, null=True)),
                ('puntaje', models.FloatField(blank=True, null=True)),
                ('ajustes_puntaje', models.FloatField(default=0, help_text='Ajustes adicionales al puntaje')),
                ('progreso', models.PositiveIntegerField(default=0, help_text='Porcentaje de progreso')),
                ('ip_acceso', models.GenericIPAddressField(blank=True, null=True)),
                ('estudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participaciones', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Participación en Evaluación',
                'verbose_name_plural': 'Participaciones en Evaluaciones',
            },
        ),
        migrations.CreateModel(
            name='AjustePuntaje',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('puntaje_anterior', models.FloatField()),
                ('ajuste', models.FloatField()),
                ('puntaje_nuevo', models.FloatField()),
                ('motivo', models.TextField()),
                ('fecha', models.DateTimeField(auto_now_add=True)),
                ('docente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ajustes_realizados', to=settings.AUTH_USER_MODEL)),
                ('estudiante_evaluacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historial_ajustes', to='evaluations.estudianteevaluacion')),
            ],
            options={
                'verbose_name': 'Ajuste de Puntaje',
                'verbose_name_plural': 'Ajustes de Puntaje',
            },
        ),
        migrations.CreateModel(
            name='Evaluacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('descripcion', models.TextField(blank=True)),
                ('duracion_minutos', models.PositiveIntegerField(default=60)),
                ('fecha_inicio', models.DateTimeField()),
                ('fecha_fin', models.DateTimeField(blank=True, null=True)),
                ('codigo_acceso', models.CharField(editable=False, max_length=8, unique=True)),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('activa', 'Activa'), ('finalizada', 'Finalizada')], default='pendiente', max_length=10)),
                ('permitir_revision', models.BooleanField(default=True)),
                ('mostrar_resultado', models.BooleanField(default=True)),
                ('orden_aleatorio', models.BooleanField(default=False)),
                ('puntaje_total', models.PositiveIntegerField(default=0)),
                ('puntaje_aprobacion', models.PositiveIntegerField(default=60, help_text='Porcentaje mínimo para aprobar')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('creador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluaciones', to=settings.AUTH_USER_MODEL)),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluaciones', to='evaluations.curso')),
            ],
            options={
                'verbose_name': 'Evaluación',
                'verbose_name_plural': 'Evaluaciones',
            },
        ),
        migrations.AddField(
            model_name='estudianteevaluacion',
            name='evaluacion',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participantes', to='evaluations.evaluacion'),
        ),
        migrations.CreateModel(
            name='EvaluacionEjercicio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orden', models.PositiveIntegerField(default=0)),
                ('ejercicio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='evaluations.ejercicio')),
                ('evaluacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='evaluations.evaluacion')),
            ],
            options={
                'verbose_name': 'Ejercicio de Evaluación',
                'verbose_name_plural': 'Ejercicios de Evaluación',
                'ordering': ['orden'],
                'unique_together': {('evaluacion', 'ejercicio')},
            },
        ),
        migrations.AddField(
            model_name='evaluacion',
            name='ejercicios',
            field=models.ManyToManyField(through='evaluations.EvaluacionEjercicio', to='evaluations.ejercicio'),
        ),
        migrations.AlterUniqueTogether(
            name='estudianteevaluacion',
            unique_together={('estudiante', 'evaluacion')},
        ),
        migrations.CreateModel(
            name='RespuestaEjercicio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('respuesta', models.JSONField(help_text='Respuesta del estudiante en formato JSON')),
                ('es_correcta', models.BooleanField(blank=True, null=True)),
                ('puntaje_obtenido', models.FloatField(default=0)),
                ('tiempo_respuesta', models.DurationField(blank=True, null=True)),
                ('fecha_respuesta', models.DateTimeField(auto_now_add=True)),
                ('ejercicio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='respuestas', to='evaluations.ejercicio')),
                ('estudiante_evaluacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='respuestas', to='evaluations.estudianteevaluacion')),
            ],
            options={
                'verbose_name': 'Respuesta a Ejercicio',
                'verbose_name_plural': 'Respuestas a Ejercicios',
                'unique_together': {('estudiante_evaluacion', 'ejercicio')},
            },
        ),
    ]
